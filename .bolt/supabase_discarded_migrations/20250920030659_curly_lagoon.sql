/*
  # Add summary column to route_cache table

  1. Changes
    - Add summary jsonb column to route_cache table if it exists
    - Create route_cache table if it doesn't exist with all necessary columns
  
  2. Security
    - Enable RLS on route_cache table
    - Add policy for authenticated users to manage their own route cache data
*/

-- Create route_cache table if it doesn't exist
CREATE TABLE IF NOT EXISTS public.route_cache (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  trip_id uuid NOT NULL REFERENCES public.trips(id) ON DELETE CASCADE,
  day text NOT NULL,
  places jsonb NOT NULL DEFAULT '[]'::jsonb,
  summary jsonb DEFAULT NULL,
  created_at timestamptz DEFAULT now(),
  updated_at timestamptz DEFAULT now(),
  UNIQUE(trip_id, day)
);

-- Add summary column if table exists but column doesn't
DO $$ 
BEGIN
  IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'route_cache' AND table_schema = 'public') THEN
    IF NOT EXISTS (
      SELECT 1 FROM information_schema.columns 
      WHERE table_name = 'route_cache' 
      AND column_name = 'summary' 
      AND table_schema = 'public'
    ) THEN
      ALTER TABLE public.route_cache ADD COLUMN summary jsonb DEFAULT NULL;
    END IF;
  END IF;
END $$;

-- Enable RLS
ALTER TABLE public.route_cache ENABLE ROW LEVEL SECURITY;

-- Create policy for authenticated users to manage their own route cache data
CREATE POLICY IF NOT EXISTS "Users can manage route cache for their trips"
  ON public.route_cache
  FOR ALL
  TO authenticated
  USING (
    trip_id IN (
      SELECT id FROM public.trips 
      WHERE owner_id = auth.uid() 
      OR id IN (
        SELECT trip_id FROM public.trip_collaborators 
        WHERE user_id = auth.uid()
      )
    )
  )
  WITH CHECK (
    trip_id IN (
      SELECT id FROM public.trips 
      WHERE owner_id = auth.uid() 
      OR id IN (
        SELECT trip_id FROM public.trip_collaborators 
        WHERE user_id = auth.uid()
      )
    )
  );

-- Create index for better performance
CREATE INDEX IF NOT EXISTS idx_route_cache_trip_day ON public.route_cache(trip_id, day);